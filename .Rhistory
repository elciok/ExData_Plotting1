failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
?select
submit()
submit()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="/tmp/data1.csv")
data <- read.csv("/tmp/data1.csv", header = TRUE)
data$ACR == 3
data$ACR == 3 & data$AGS == 6
agricultureLogical <- (data$ACR == 3 & data$AGS == 6)
which(agricultureLogical)
library(jpeg)
?jpeg
install.packages("jpeg")
library(jpeg)
ls()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="/tmp/data1.jpg")
?jpeg
?jpeg::readJPEG
data2 <- jpeg::readJPEG("/tmp/data1.jpg", native = TRUE)
data2
summary((data2))
?quantile
quantile(data2, probs = c(0.3, 0.8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile="/tmp/gdpdata.csv")
gdpdata <- read.csv("/tmp/gdpdata.csv", header = TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile="/tmp/edudata.csv")
edudata <- read.csv("/tmp/edudata.csv", header = TRUE)
str(gdpdata)
head(gdpdata)
gdpdata
?read.csv
gdpdata <- read.csv("/tmp/gdpdata.csv", skip=5)
head(gdpdata)
gdpdata <- read.csv("/tmp/gdpdata.csv", skip=5, header = FALSE)
head(gdpdata)
head(edudata)
summary(edudata)
str(edudata)
edudata$CountryCode
edudata$CountryCode %in% gdpdata$V1
sum(edudata$CountryCode %in% gdpdata$V1)
library(dplyr)
arrange(gdpdata, V1)
head(gdpdata)
arrange(gdpdata, V2)
arrange(gdpdata, desc(V2))
arrange(gdpdata[1:220,], desc(V2))
gdpdata <- read.csv("/tmp/gdpdata.csv", skip=5, header = FALSE, nrows = 220)
head(gdpdata)
tail(gdpdata)
gdpdata <- read.csv("/tmp/gdpdata.csv", skip=5, header = FALSE, nrows = 215)
tail(gdpdata)
str(gdpdata)
gdpdata <- read.csv("/tmp/gdpdata.csv", skip=5, header = FALSE, nrows = 190)
tail(gdpdata)
arrange(gdpdata, desc(V2))
arrange(gdpdata, desc(V2))[13,]
gdpdata$V1
gdpdata$V1 %in% edudata$CountryCode
sum(gdpdata$V1 %in% edudata$CountryCode)
str(edudata)
head(gdpdata)
gdpdata <- gdpdata %>%
rename(CountryCode = V1, rank = V2, CountryName = V4, gdp = V5) %>%
select(CountryCode, rank, CountryName, gdp)
head(gdpdata)
sum(gdpdata$CountryCode %in% edudata$CountryCode)
arrange(gdpdata, desc(rank))[13,]
str(edudata)
?join
inner_join(gdpdata, edudata)
left_join(gdpdata, edudata)
alldata <- inner_join(gdpdata, edudata)
str(edudata)
edudata$Income.Group
tapply(alldata$gdp, alldata$Income.Group, mean)
?tapply
alldata$gdp
alldata$Income.Group
tapply(alldata$gdp, alldata$Income.Group, sum)
tapply(alldata$gdp, alldata$Income.Group, mean)
summarise(gdpdata)
summary(gdpdata)
class(gdpdata$gdp)
?read.csv
gdpdata <- read.csv("/tmp/gdpdata.csv", skip=5, header = FALSE, nrows = 190, col.names = c("CountryCode", "rank", "V3", "CountryName", "gdp"), colClasses = c("character", "integer", "NULL", "character", "integer"))
head(gdpdata)
read.csv("/tmp/gdpdata.csv", skip=5, header = FALSE, nrows = 190)
gdpdata <- read.csv("/tmp/gdpdata.csv", skip=5, header = FALSE, nrows = 190, col.names = c("CountryCode", "rank", "V3", "CountryName", "gdp", "V6", "V7", "V8", "V9", "V10"), colClasses = c("character", "integer", "NULL", "character", "integer", "NULL", "NULL", "NULL", "NULL", "NULL"))
gdpdata <- read.csv("/tmp/gdpdata.csv", skip=5, header = FALSE, nrows = 190, col.names = c("CountryCode", "rank", "V3", "CountryName", "gdp", "V6", "V7", "V8", "V9", "V10"), colClasses = c("character", "integer", "NULL", "character", "factor", "NULL", "NULL", "NULL", "NULL", "NULL"))
, "rank", "V3", "CountryName", "gdp", "V6", "V7", "V8", "V9", "V10"), colClasses = c("factor", "integer", "NULL", "character", "integer", "NULL", "NULL", "NULL", "NULL", "NULL"))
gdpdata <- read.csv("/tmp/gdpdata.csv", skip=5, header = FALSE, nrows = 190, col.names = c("CountryCode", "rank", "V3", "CountryName", "gdp", "V6", "V7", "V8", "V9", "V10"), colClasses = c("factor", "integer", "NULL", "character", "integer", "NULL", "NULL", "NULL", "NULL", "NULL"))
gdpdata <- read.csv("/tmp/gdpdata.csv", skip=5, header = FALSE, nrows = 190, col.names = c("CountryCode", "rank", "V3", "CountryName", "gdp", "V6", "V7", "V8", "V9", "V10"), colClasses = c("factor", "integer", "NULL", "character", "character", "NULL", "NULL", "NULL", "NULL", "NULL"))
gdpdata
gdpdata <- read.csv("/tmp/gdpdata.csv", skip=5, header = FALSE, nrows = 190, col.names = c("CountryCode", "rank", "V3", "CountryName", "gdp_character", "V6", "V7", "V8", "V9", "V10"), colClasses = c("factor", "integer", "NULL", "character", "character", "NULL", "NULL", "NULL", "NULL", "NULL"))
str(gdpdata)
gdpdata <- gdpdata %>%
mutate(gdp = as.numeric(gdp_character)) %>%
select(CountryCode, rank, CountryName, gdp)
gdpdata
gdpdata <- gdpdata %>%
mutate(gdp = as.numeric( gsub("[^0-9]", "", gdp_character))) %>%
select(CountryCode, rank, CountryName, gdp)
gdpdata <- read.csv("/tmp/gdpdata.csv", skip=5, header = FALSE, nrows = 190, col.names = c("CountryCode", "rank", "V3", "CountryName", "gdp_character", "V6", "V7", "V8", "V9", "V10"), colClasses = c("factor", "integer", "NULL", "character", "character", "NULL", "NULL", "NULL", "NULL", "NULL"))
gdpdata <- gdpdata %>%
mutate(gdp = as.numeric( gsub("[^0-9]", "", gdp_character))) %>%
select(CountryCode, rank, CountryName, gdp)
gdpdata
alldata <- inner_join(gdpdata, edudata)
tapply(alldata$gdp, alldata$Income.Group, mean)
tapply(alldata$rank, alldata$Income.Group, mean)
quantile(alldata$rank)
cut(alldata, breaks = quantile(alldata$rank))
cut(alldata$rank, breaks = quantile(alldata$rank))
alldata[1,]
alldata$rankGroup = cut(alldata$rank, breaks = quantile(alldata$rank))
alldata[1, rankGroup]
alldata[1, "rankGroup"]
?table
table(alldata)
table(alldata$rankGroup, alldata$Income.Group)
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
alldata2 = mutate(alldata, rankGroup = cut2(rank, 5))
alldata2$rankGroup
?cut2
alldata2 = mutate(alldata, rankGroup = cut2(rank, g = 5))
alldata2$rankGroup
table(alldata2$rankGroup, alldata2$Income.Group)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = "lubridate")
help(package = lubridate)
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
now()
this_moment <- update(this_moment, hours = 11, minutes = 57, seconds=50)
this_moment
?now
now(tzone = 'America/New_York')
nyc <- now('America/New_York')
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
swirl()
data <- read.csv("/tmp/data1.csv", header = TRUE)
names(data)
?strsplit
result1 <- strsplit(names(data), "wgtp")
result1
result1[123]
gdpdata <- read.csv("/tmp/gdpdata.csv", skip=5, header = FALSE, nrows = 190, col.names = c("CountryCode", "rank", "V3", "CountryName", "gdp_character", "V6", "V7", "V8", "V9", "V10"), colClasses = c("factor", "integer", "NULL", "character", "character", "NULL", "NULL", "NULL", "NULL", "NULL"))
gdpdata <- gdpdata %>%
mutate(gdp = as.numeric( gsub("[^0-9]", "", gdp_character))) %>%
select(CountryCode, rank, CountryName, gdp)
mean(gdpdata$gdp)
grep("^United", gdpdata$CountryName)
?grep
gdpdata$CountryName[99]
gdpdata$CountryName[186]
gdpdata$CountryName[1]
gdpdata$CountryName[6]
gdpdata$CountryName[32]
gdpdata <- read.csv("/tmp/gdpdata.csv", skip=5, header = FALSE, nrows = 190, col.names = c("CountryCode", "rank", "V3", "CountryName", "gdp_character", "V6", "V7", "V8", "V9", "V10"), colClasses = c("factor", "integer", "NULL", "character", "character", "NULL", "NULL", "NULL", "NULL", "NULL"))
gdpdata <- gdpdata %>%
mutate(gdp = as.numeric( gsub("[^0-9]", "", gdp_character))) %>%
select(CountryCode, rank, CountryName, gdp)
edudata <- read.csv("/tmp/edudata.csv", header = TRUE)
str(edudata)
str(gdpdata)
grepl(edudata$Special.Notes, "Fiscal")
grep(edudata$Special.Notes, "Fiscal")
?grep
grep("Fiscal", edudata$Special.Notes)
hasFiscal <- grep("[Ff]iscal", edudata$Special.Notes)
length(hasFiscal)
hasFiscal
hasFiscal <- edudata[grep("[Ff]iscal", edudata$Special.Notes),]
hasFiscal
inJune <- hasFiscal[grep("[Ff]iscal year end: June", hasFiscal$Special.Notes),]
inJune
dim(inJune)
summary(inJune)
length(names(inJune))
dim(inJune)
nrow(inJune)
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
str(sampleTimes)
sampleTimes[0]
class(sampleTimes[0])
library(lubridate)
sampleDates = ymd(sampleTimes)
sampleDates
sampleDates[0]
sampleDates[[0]
]
sampleDates[[0]]
wkday()
year(sampleDates)
year(sampleDates == 2012)
year(sampleDates)  == 2012
sum(year(sampleDates)  == 2012)
sum(year(sampleDates)  == 2012 & wday(sampleDates) == 2)
library(swirl)
install_from_swirl("Exploratory Data Analysis")
install_from_swirl("Exploratory Data Analysis")
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25 ~ region, data=pollution, col="red")
par(mfrow=c(2, 1), mar=c(4,4,2,1))
east = subset(pollution, region == "east")
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col="green")
hist(subset(pollution, region=="west")$pm25, col="green")
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow=c(1,2), mar=c(5,4,2,1))
west <- subset(pollution, region=="west")
plot(west$latitude, west$pm25, main="West")
plot(west$latitude, west$pm25, main="West")
plot(east$latitude, east$pm25, main="East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyserdata")
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, file="geyserplot.png")
dev.off()
getpwd()
pwd()
getwd()
swirl()
head(cars)
with(cars, plot(speed, dist))
text(x=mean(cars$speed), y=mean(cars$dist), "SWIRL rules!")
text(mean(cars$speed), mean(cars$dist), "SWIRL rules!")
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income, data=state, layout=c(4,1))
xyplot(Life.Exp ~ Income | region, data=state, layout=c(4,1))
xyplot(Life.Exp ~ Income | region, data=state, layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$ozone, na.rm = TRUE)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab="red", main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
may <- subset(airquality, month=5)
may <- subset(airquality, Month=5)
may <- subset(airquality, Month==5)
points(may$Wind, may$Ozone, pch=20, col="blue")
points(may$Wind, may$Ozone, pch=17, col="blue")
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, pch=22, col="red")
points(notmay$Wind, notmay$Ozone, pch=8, col="red")
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3))
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
getwd()
setwd("~/projetos/coursera/datascience/exploratorydata/ExData_Plotting1")
data <- read.csv("household_power_consumption.txt", header = TRUE)
head(data)
?read.table
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";")
head(data)
data$Date
head(data)
data <- subset(data, Date >= "2007-02-01" && Date <= "2007-02-02")
?as.Date
?read.table
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings="?", stringsAsFactors=False)
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings="?", stringsAsFactors=FALSE)
data <- subset(data, Date == "02/01/2007" || Date == "02/02/2007")
head(data)
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings="?", comment.char = "", stringsAsFactors=FALSE)
sapply(data, class)
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings="?", comment.char = "", colClasses=c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric") stringsAsFactors=FALSE)
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings="?", comment.char = "", colClasses=c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), stringsAsFactors=FALSE)
data <- subset(data, Date == "02/01/2007" || Date == "02/02/2007")
data
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings="?", comment.char = "", colClasses=c("Date", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), stringsAsFactors=FALSE)
head(data)
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings="?", comment.char = "", colClasses=c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), stringsAsFactors=FALSE)
data <- subset(data, Date == "02/01/2007")
data
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings="?", comment.char = "", colClasses=c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), stringsAsFactors=FALSE)
head(data)
data <- subset(data, Date == "2/1/2007" || Date == "2/2/2007")
head(data)
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings="?", comment.char = "", colClasses=c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), stringsAsFactors=FALSE)
data[1,]
data[1,]$Date
data[1,]$Date == "16/12/2006"
data <- subset(data, Date == "2/1/2007")
data
TRUE || FALSE
TRUE && FALSE
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings="?", comment.char = "", colClasses=c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), stringsAsFactors=FALSE)
data[, data$Date == "2/1/2007" || data$Date == "2/2/2007"]
data[data$Date == "2/1/2007" || data$Date == "2/2/2007",]
y<-10f <- function(x) { y<-2y^2 + g(x)}g <- function(x) { x*y}
y<-10
f <- function(x) { y<-2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
c(1, 2 ,3)
data.frame(ola=c(1,2 ,3, 4))
x <- data.frame(ola=c(1,2 ,3, 4))
x
x[x$ola == 1,]
x[x$ola == 2,]
x[x$ola == 2 || x$ola == 3,]
x[x$ola == 2 | x$ola == 3,]
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings="?", comment.char = "", colClasses=c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), stringsAsFactors=FALSE)
data[data$Date == "2/1/2007" | data$Date == "2/2/2007",]
data <- data[data$Date == "2/1/2007" | data$Date == "2/2/2007",]
head(data)
dim(data)
hist(data)
hist(data$Global_active_power, col="red")
par()
par("mfrow")
par(mfrow=1)
par(mfrow=c(1,1))
hist(data$Global_active_power, col="red")
?hist
hist(data$Global_active_power, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
?png
# subset lines with dates 2/1/2007 and 2/2/2007
load("plot1.R")
# read data
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings="?", comment.char = "", colClasses=c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), stringsAsFactors=FALSE)
# subset lines with dates 2/1/2007 and 2/2/2007
data <- data[data$Date == "2/1/2007" | data$Date == "2/2/2007",]
png(filename = "plot1.png", width=480, height=480)
# generate histogram
hist(data$Global_active_power, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
# close file
dev.off()
paste("123", "456")
# read data
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings="?", comment.char = "", colClasses=c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), stringsAsFactors=FALSE)
# subset lines with dates 2/1/2007 and 2/2/2007
data <- data[data$Date == "2/1/2007" | data$Date == "2/2/2007",]
#adding column with date and time field
data$DateAndTime <- strptime(paste(data$Date, data$Time), "%m/%d/%Y %H:%M:%S")
head(data)
?plot
plot(data$DateAndTime, data$Global_active_power)
?plot
plot(data$DateAndTime, data$Global_active_power, type="l")
plot(data$DateAndTime, data$Global_active_power, type="l", ylab="Global Active Power (kilowatts)")
plot(data$DateAndTime, data$Global_active_power, type="l", ylab="Global Active Power (kilowatts)", xlaxlab = )
plot(data$DateAndTime, data$Global_active_power, type="l", ylab="Global Active Power (kilowatts)", xlaxlab = "")
plot(data$DateAndTime, data$Global_active_power, type="l", ylab="Global Active Power (kilowatts)", xla = "")
plot(data$DateAndTime, data$Global_active_power, type="l", ylab="Global Active Power (kilowatts)", xlab = "")
head(data)
plot(data$DateAndTime, data$Sub_metering_1, type="l", ylab="Energy sub metering", xlab = "")
head(data)
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings="?", comment.char = "", colClasses=c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), stringsAsFactors=FALSE)
head(data)
data <- data[data$Date == "2/1/2007" | data$Date == "2/2/2007",]
plot(data$DateAndTime, data$Sub_metering_1, type="l", ylab="Energy sub metering", xlab = "")
plot(data$DateAndTime, data$Sub_metering_2, type="l", ylab="Energy sub metering", xlab = "", col="red")
plot(data$DateAndTime, data$Sub_metering_2, type="l", ylab="Energy sub metering", xlab = "", col="blue")
head(data)
dim(data$DateAndTime)
length(data$DateAndTime)
data$DateAndTime <- strptime(paste(data$Date, data$Time), "%m/%d/%Y %H:%M:%S")
plot(data$DateAndTime, data$Sub_metering_1, type="l", ylab="Energy sub metering", xlab = "")
plot(data$DateAndTime, data$Sub_metering_2, type="l", ylab="Energy sub metering", xlab = "", col="red")
plot(data$DateAndTime, data$Sub_metering_2, type="l", ylab="Energy sub metering", xlab = "", col="blue")
plot(data$DateAndTime, data$Sub_metering_2, type="l", ylab="Energy sub metering", xlab = "", col="red")
plot(data$DateAndTime, data$Sub_metering_1, type="l", ylab="Energy sub metering", xlab = "")
# read data
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings="?", comment.char = "", colClasses=c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), stringsAsFactors=FALSE)
# subset lines with dates 2/1/2007 and 2/2/2007
data <- data[data$Date == "2/1/2007" | data$Date == "2/2/2007",]
head(data)
summary(data)
str(data)
data <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings="?", comment.char = "", colClasses=c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), stringsAsFactors=FALSE)
# subset lines with dates 2/1/2007 and 2/2/2007
data <- data[data$Date == "2/1/2007" | data$Date == "2/2/2007",]
#adding column with date and time field
data$DateAndTime <- strptime(paste(data$Date, data$Time), "%m/%d/%Y %H:%M:%S")
with(data, plot(DateAndTime, Sub_metering_1), type="n")
with(data, lines(DateAndTime, Sub_metering_1, col="black"))
with(data, lines(DateAndTime, Sub_metering_2, col="red"))
with(data, lines(DateAndTime, Sub_metering_3, col="blue"))
data$Sub_metering_1
data$Sub_metering_2
with(data, plot(DateAndTime, Sub_metering_1, type="n"))
with(data, lines(DateAndTime, Sub_metering_1, col="black"))
with(data, lines(DateAndTime, Sub_metering_2, col="red"))
with(data, lines(DateAndTime, Sub_metering_3, col="blue"))
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
?legend
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=c(1, 1, 1))
with(data, plot(DateAndTime, Sub_metering_1, type="n", ylab="Energy sub metering"))
with(data, lines(DateAndTime, Sub_metering_1, col="black"))
with(data, lines(DateAndTime, Sub_metering_2, col="red"))
with(data, lines(DateAndTime, Sub_metering_3, col="blue"))
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=c(1, 1, 1))
with(data, plot(DateAndTime, Sub_metering_1, type="n", ylab="Energy sub metering", xlab=""))
with(data, lines(DateAndTime, Sub_metering_1, col="black"))
with(data, lines(DateAndTime, Sub_metering_2, col="red"))
with(data, lines(DateAndTime, Sub_metering_3, col="blue"))
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=c(1, 1, 1))
